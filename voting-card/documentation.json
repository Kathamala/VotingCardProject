{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-3ffdec2816aa5aca9eafc461d202657e",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<card title=\"Segue o relator?\" state=\"open\" [votes]=\"options\" ></card>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "options",
                    "defaultValue": "[\n    {\n        option: 'Sim',\n        count: 8,\n    },\n    {\n        option: 'Não',\n        count: 3\n    }\n]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "title",
                    "defaultValue": "'voting-card'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<card title=\"Segue o relator?\" state=\"open\" [votes]=\"options\" ></card>'\n})\nexport class AppComponent {\n  title = 'voting-card';\n  options = [\n    {\n        option: 'Sim',\n        count: 8,\n    },\n    {\n        option: 'Não',\n        count: 3\n    }\n]\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "VotingBoothComponent",
            "id": "component-VotingBoothComponent-86cbabf53205c8178ef132a3a9d748da",
            "file": "src/components/voting-booth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "booth",
            "styleUrls": [],
            "styles": [
                "\n        .choice{\n            margin: 10px;\n        }\n"
            ],
            "template": "<button class=\"choice\" *ngFor=\"let option of options; index as i\" (click)=\"select.emit(i)\">\n    {{ option }}\n</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "options",
                    "line": 20,
                    "type": "string[] | undefined"
                }
            ],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter()",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core'\n\n@Component({\n  selector: 'booth',\n  template: `\n    <button class=\"choice\" *ngFor=\"let option of options; index as i\" (click)=\"select.emit(i)\">\n        {{ option }}\n    </button>\n  `,\n  styles:[\n    `\n        .choice{\n            margin: 10px;\n        }\n`\n  ]\n})\n\nexport class VotingBoothComponent {\n    @Input() options: string[] | undefined\n    @Output() select = new EventEmitter()\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n        .choice{\n            margin: 10px;\n        }\n\n"
        },
        {
            "name": "VotingCardComponent",
            "id": "component-VotingCardComponent-10af5e10c52d56c5991ae2615d0fb391",
            "file": "src/components/voting-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "card",
            "styleUrls": [],
            "styles": [
                "\n        .votingCard{\n            padding: 10px;\n            border-radius: 5px;\n            border: 1px solid #000;\n            background-color: cornflowerblue;\n        }\n    "
            ],
            "template": "<div class=\"votingCard\">\n    <h1>{{title}}</h1>\n    <div *ngIf=\"state === 'open'; else showResult\" >\n        <br/>\n        <booth\n            [options]=\"boothOptions\"\n            (select)=\"onSelect($event)\"\n        >\n        </booth>\n    </div>\n\n    <ng-template #showResult>\n        <result [votes]=\"votes\" ></result>\n    </ng-template>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "state",
                    "line": 39,
                    "type": "string | undefined"
                },
                {
                    "name": "title",
                    "line": 38,
                    "type": "string | undefined"
                },
                {
                    "name": "votes",
                    "defaultValue": "[]",
                    "line": 40,
                    "type": "literal type[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "boothOptions",
                    "defaultValue": "['']",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48
                },
                {
                    "name": "onSelect",
                    "args": [
                        {
                            "name": "i",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { OnInit } from '@angular/core';\nimport { Component, Input, AfterViewInit } from '@angular/core'\nimport { VotingBoothComponent } from './voting-booth.component';\nimport { VotingResultComponent } from './voting-result.component';\n\n@Component({\n  selector: 'card',\n  template: `\n    <div class=\"votingCard\">\n        <h1>{{title}}</h1>\n        <div *ngIf=\"state === 'open'; else showResult\" >  \n            <br/>\n            <booth \n                [options]=\"boothOptions\"\n                (select)=\"onSelect($event)\"\n            >\n            </booth>\n        </div>\n\n        <ng-template #showResult>\n            <result [votes]=\"votes\" ></result>\n        </ng-template>\n    </div>\n  `,\n  styles: [\n    `\n        .votingCard{\n            padding: 10px;\n            border-radius: 5px;\n            border: 1px solid #000;\n            background-color: cornflowerblue;\n        }\n    `\n  ]\n})\n\nexport class VotingCardComponent implements OnInit {\n    @Input() title: string | undefined\n    @Input() state: string | undefined\n    @Input() votes: { option: string; count: number; }[] = []\n    boothOptions = ['']\n\n    onSelect(i: any){\n        this.votes[i].count++;\n        this.state = \"closed\";\n    }    \n\n    ngOnInit() {\n        this.boothOptions = this.votes.map(option => (option.option));\n    }\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n        .votingCard{\n            padding: 10px;\n            border-radius: 5px;\n            border: 1px solid #000;\n            background-color: cornflowerblue;\n        }\n    \n",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "VotingResultComponent",
            "id": "component-VotingResultComponent-21e46e2df8d65eb7cb7054764445d66e",
            "file": "src/components/voting-result.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "result",
            "styleUrls": [],
            "styles": [],
            "template": "<div *ngFor=\"let option of votes; index as i\">\n    {{i+1}}. {{option.option}} - {{option.count}} votes ({{((option.count / total)*100).toFixed(0)}}%)\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "votes",
                    "defaultValue": "[]",
                    "line": 14,
                    "type": "literal type[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "total",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { OnInit } from '@angular/core';\nimport { Component, Input } from '@angular/core'\n\n@Component({\n  selector: 'result',\n  template:  `\n    <div *ngFor=\"let option of votes; index as i\">\n        {{i+1}}. {{option.option}} - {{option.count}} votes ({{((option.count / total)*100).toFixed(0)}}%)\n    </div>\n`\n})\n\nexport class VotingResultComponent implements OnInit {\n    @Input() votes: { option: string; count: number; }[] = [];\n    private total = 0;\n\n    ngOnInit() {\n        for(var i=0; i<this.votes.length; i++){\n            this.total += this.votes[i].count;\n        }\n    }\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "VotingBoothComponent"
                        },
                        {
                            "name": "VotingCardComponent"
                        },
                        {
                            "name": "VotingResultComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/voting-booth.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/voting-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/voting-result.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "SecondStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/voting-booth.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SecondStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/voting-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SecondStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/voting-result.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/voting-booth.stories.ts",
                "type": "Story<VotingBoothComponent>",
                "defaultValue": "(args: VotingBoothComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/voting-card.stories.ts",
                "type": "Story<VotingCardComponent>",
                "defaultValue": "(args: VotingCardComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/voting-result.stories.ts",
                "type": "Story<VotingResultComponent>",
                "defaultValue": "(args: VotingResultComponent) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/voting-booth.stories.ts": [
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/voting-booth.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SecondStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/voting-booth.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/voting-booth.stories.ts",
                    "type": "Story<VotingBoothComponent>",
                    "defaultValue": "(args: VotingBoothComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/voting-card.stories.ts": [
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/voting-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SecondStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/voting-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/voting-card.stories.ts",
                    "type": "Story<VotingCardComponent>",
                    "defaultValue": "(args: VotingCardComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/voting-result.stories.ts": [
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/voting-result.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SecondStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/voting-result.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/voting-result.stories.ts",
                    "type": "Story<VotingResultComponent>",
                    "defaultValue": "(args: VotingResultComponent) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/components/voting-booth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VotingBoothComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/components/voting-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VotingCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/components/voting-result.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VotingResultComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/voting-booth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/voting-booth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SecondStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/voting-booth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/voting-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/voting-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SecondStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/voting-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/voting-result.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/voting-result.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SecondStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/voting-result.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}