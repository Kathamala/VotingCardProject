{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/Frameworks Frontend/atividade_unidade01/VotingCardProject/voting-card/src/components/VotingCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport VotingBooth from './VotingBooth';\nimport Result from './Result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VotingCard(props) {\n  _s();\n\n  const boothOptions = props.options.map(option => option.text);\n  const [state, setState] = useState(props.state);\n  useEffect(() => {\n    if (props.state !== state) {\n      setState(props.state);\n    }\n  }, [props.state]);\n\n  function select(optionIndex) {\n    setState(\"closed\");\n    props.onChose(optionIndex);\n    console.log(optionIndex);\n  }\n\n  if (state === \"open\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"votingCard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(VotingBooth, {\n        choices: boothOptions,\n        onSelect: select\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  } else if (state === \"closed\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"votingCard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Result, {\n        choices: props.options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"NOT FOUND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n}\n/*\nexport default function VotingCard(props) {\n    var initVotes = [];\n    for(var i=0; i<props.options.choices.length; i++){\n        initVotes[i] = 0;\n    }\n    const [votes, setVotes] = useState(initVotes);\n    const [state, setState] = useState(props.state);\n\n    function select(optionIndex) {\n        var tempVotes = votes;\n        tempVotes[optionIndex]++;\n        setVotes(tempVotes);\n        setState(\"closed\");\n        console.log(votes);\n    }\n\n    function voteAgain(){\n        setState(\"open\");\n    }\n\n    const title = props.title;\n\n    if(state === \"open\"){\n        return (\n            <div className=\"votingCard\">\n                <h2>{ title }</h2>\n                <br/><br/>\n                <VotingBooth choices={ props.options.choices } onSelect={ select }/>\n            </div>\n        )\n    } else if(state === \"closed\"){\n        return (\n            <div className=\"votingCard\">\n                <h2>{ title }</h2>\n                <Result choices={ props.options.choices } votes={ votes }/>\n                <button onClick= { voteAgain }>Vote again</button>\n            </div>\n        )\n    } else{\n        return (\n            <div>\n                <h1>NOT FOUND</h1>\n            </div>\n        )\n    }\n}*/\n\n_s(VotingCard, \"zTjT+zQL+yxVh4k22NHskD32PO8=\");\n\n_c = VotingCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"VotingCard\");\nVotingCard.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"VotingCard\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/VotingCard.js\"] = {\n    name: \"VotingCard\",\n    docgenInfo: VotingCard.__docgenInfo,\n    path: \"src/components/VotingCard.js\"\n  };\n}","map":{"version":3,"sources":["/home/thiago/Documentos/Frameworks Frontend/atividade_unidade01/VotingCardProject/voting-card/src/components/VotingCard.js"],"names":["React","useState","useEffect","VotingBooth","Result","VotingCard","props","boothOptions","options","map","option","text","state","setState","select","optionIndex","onChose","console","log","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEtC,QAAMC,YAAY,GAAGD,KAAK,CAACE,OAAN,CAAcC,GAAd,CAAkBC,MAAM,IAAKA,MAAM,CAACC,IAApC,CAArB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACK,KAAK,CAACM,KAAP,CAAlC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAII,KAAK,CAACM,KAAN,KAAgBA,KAApB,EAA2B;AACzBC,MAAAA,QAAQ,CAACP,KAAK,CAACM,KAAP,CAAR;AACD;AACF,GAJM,EAIJ,CAACN,KAAK,CAACM,KAAP,CAJI,CAAT;;AAMA,WAASE,MAAT,CAAgBC,WAAhB,EAA6B;AACzBF,IAAAA,QAAQ,CAAC,QAAD,CAAR;AACAP,IAAAA,KAAK,CAACU,OAAN,CAAcD,WAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACH;;AAED,MAAGH,KAAK,KAAK,MAAb,EAAoB;AAChB,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAA,kBAAMN,KAAK,CAACa;AAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAES;AAAA;AAAA;AAAA;AAAA,cAFT,eAGI,QAAC,WAAD;AAAa,QAAA,OAAO,EAAGZ,YAAvB;AAAsC,QAAA,QAAQ,EAAGO;AAAjD;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GARD,MAQO,IAAGF,KAAK,KAAK,QAAb,EAAsB;AACzB,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAA,kBAAMN,KAAK,CAACa;AAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAGb,KAAK,CAACE;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPM,MAOD;AACF,wBACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACJ;AAkBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAvGwBH,U;;KAAAA,U","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport VotingBooth from './VotingBooth'\nimport Result from './Result'\n\nexport default function VotingCard(props) {\n\n    const boothOptions = props.options.map(option => (option.text));\n    const [state, setState] = useState(props.state);\n    \n    useEffect(() => {\n        if (props.state !== state) {\n          setState(props.state)\n        }\n      }, [props.state])\n\n    function select(optionIndex) {\n        setState(\"closed\");\n        props.onChose(optionIndex);\n        console.log(optionIndex);\n    }\n\n    if(state === \"open\"){\n        return (\n            <div className=\"votingCard\">\n                <h2>{ props.title }</h2>\n                <br/><br/>\n                <VotingBooth choices={ boothOptions } onSelect={ select }/>\n            </div>\n        )\n    } else if(state === \"closed\"){\n        return (\n            <div className=\"votingCard\">\n                <h2>{ props.title }</h2>\n                <Result choices={ props.options }/>\n            </div>\n        )\n    } else{\n        return (\n            <div>\n                <h1>NOT FOUND</h1>\n            </div>\n        )\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nexport default function VotingCard(props) {\n    var initVotes = [];\n    for(var i=0; i<props.options.choices.length; i++){\n        initVotes[i] = 0;\n    }\n    const [votes, setVotes] = useState(initVotes);\n    const [state, setState] = useState(props.state);\n\n    function select(optionIndex) {\n        var tempVotes = votes;\n        tempVotes[optionIndex]++;\n        setVotes(tempVotes);\n        setState(\"closed\");\n        console.log(votes);\n    }\n\n    function voteAgain(){\n        setState(\"open\");\n    }\n\n    const title = props.title;\n\n    if(state === \"open\"){\n        return (\n            <div className=\"votingCard\">\n                <h2>{ title }</h2>\n                <br/><br/>\n                <VotingBooth choices={ props.options.choices } onSelect={ select }/>\n            </div>\n        )\n    } else if(state === \"closed\"){\n        return (\n            <div className=\"votingCard\">\n                <h2>{ title }</h2>\n                <Result choices={ props.options.choices } votes={ votes }/>\n                <button onClick= { voteAgain }>Vote again</button>\n            </div>\n        )\n    } else{\n        return (\n            <div>\n                <h1>NOT FOUND</h1>\n            </div>\n        )\n    }\n}*/"]},"metadata":{},"sourceType":"module"}