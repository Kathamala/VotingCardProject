{"version":3,"file":"main.1fbddceb99ac8571e82b.hot-update.js","sources":["webpack:///./src/components/VotingCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport VotingBooth from './VotingBooth'\nimport Result from './Result'\n\nexport default function VotingCard(props) {\n\n    const boothOptions = props.options.map(option => (option.text));\n    const [state, setState] = useState(props.state);\n    \n    useEffect(() => {\n        if (props.state !== state) {\n          setState(props.state)\n        }\n      }, [props.state])\n\n    function select(optionIndex) {\n        setState(\"closed\");\n        props.onChose(optionIndex);\n        console.log(optionIndex);\n    }\n\n    if(state === \"open\"){\n        return (\n            <div className=\"votingCard\">\n                <h2>{ props.title }</h2>\n                <br/><br/>\n                <VotingBooth choices={ boothOptions } onSelect={ select }/>\n            </div>\n        )\n    } else if(state === \"closed\"){\n        return (\n            <div className=\"votingCard\">\n                <h2>{ props.title }</h2>\n                <Result choices={ props.options }/>\n            </div>\n        )\n    } else{\n        return (\n            <div>\n                <h1>NOT FOUND</h1>\n            </div>\n        )\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nexport default function VotingCard(props) {\n    var initVotes = [];\n    for(var i=0; i<props.options.choices.length; i++){\n        initVotes[i] = 0;\n    }\n    const [votes, setVotes] = useState(initVotes);\n    const [state, setState] = useState(props.state);\n\n    function select(optionIndex) {\n        var tempVotes = votes;\n        tempVotes[optionIndex]++;\n        setVotes(tempVotes);\n        setState(\"closed\");\n        console.log(votes);\n    }\n\n    function voteAgain(){\n        setState(\"open\");\n    }\n\n    const title = props.title;\n\n    if(state === \"open\"){\n        return (\n            <div className=\"votingCard\">\n                <h2>{ title }</h2>\n                <br/><br/>\n                <VotingBooth choices={ props.options.choices } onSelect={ select }/>\n            </div>\n        )\n    } else if(state === \"closed\"){\n        return (\n            <div className=\"votingCard\">\n                <h2>{ title }</h2>\n                <Result choices={ props.options.choices } votes={ votes }/>\n                <button onClick= { voteAgain }>Vote again</button>\n            </div>\n        )\n    } else{\n        return (\n            <div>\n                <h1>NOT FOUND</h1>\n            </div>\n        )\n    }\n}*/"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxGA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}